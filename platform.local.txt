#
# Local platform.txt values
#
# Added this so I can tell one build from the other
# It appears to override the one in platform.txt
# name=ESP8266 Modules - 2.5.0 dev

# Copy pasted this from platform.txt for reference.
## These can be overridden in platform.local.txt
# compiler.c.extra_flags=
# compiler.c.elf.extra_flags=
# compiler.S.extra_flags=
# compiler.cpp.extra_flags=
# compiler.ar.extra_flags=
# compiler.objcopy.eep.extra_flags=
# compiler.elf2hex.extra_flags=

# Added these to boards.local.txt
build.my_project_flags=
build.espurna_flags=
build.espurna_ha_flags=

# By adding a global.h here, we can have all libraries reference a common
# include. This include can have a symbolic link into our project folders
# assuming you use the usual duplicate include exclusion techniques.
# Note, changes to global.h will effect all builds/sketches.
# employ sketch conditionals in global.h for finer control.
#

build.my_project_name=
# I wanted to use the Arduino IDE's Project Name to fill out this; however, 
# {build.project_name} has a .ino extension. I see no way to remove it.

compiler.c.extra_flags=-include "C:\Users\mhightower83\Documents\Arduino\include\_global.h" {build.espurna_flags} {build.my_project_flags} {build.espurna_ha_flags} {build.my_project_name}
compiler.S.extra_flags=-include  {build.espurna_flags} {build.my_project_flags} {build.espurna_ha_flags} {build.my_project_name}
compiler.cpp.extra_flags=-include "C:\Users\mhightower83\Documents\Arduino\include\_global.h" {build.espurna_flags} {build.my_project_flags} {build.espurna_ha_flags} {build.my_project_name}

