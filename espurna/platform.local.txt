#
# Local platform.txt values
#
# Added this so I can tell one build from the other
# It appears to override the one in platform.txt
# name=ESP8266 Modules - 2.5.0 dev

# Copy pasted this from platform.txt for reference.
## These can be overridden in platform.local.txt
# compiler.c.extra_flags=
# compiler.c.elf.extra_flags=
# compiler.S.extra_flags=
# compiler.cpp.extra_flags=
# compiler.ar.extra_flags=
# compiler.objcopy.eep.extra_flags=
# compiler.elf2hex.extra_flags=

# Added these to boards.local.txt
build.my_project_flags=
build.espurna_flags=
build.espurna_ha_flags=
build.my_project_name=


#
#                Attention!
#
recipe.hooks.prebuild.01.pattern=echo You need to edit "platform.local.txt" and replace "YourUserId with your user id."
# Delete the above line and edit below. Replace YourUserId with a value that
# will result in custom.globalh.path pointing to your Arduino/include directory.
# If you are not using default file locations, make other updates as need.


custom.userid=YourUserId




custom.global.path=/home/{custom.userid}/Arduino/include
custom.global.path.windows=C:\Users\{custom.userid}\Documents\Arduino\include
custom.gnutool.path=/bin
# On Windows I assumed GIT is installed.
custom.gnutool.path.windows=C:\Program Files\Git\usr\bin

compiler.c.extra_flags=-include "{custom.global.path}/ide_global.h" -include "{build.path}/sketch/global.h" {build.espurna_flags} {build.espurna_ha_flags} {build.my_project_flags} {build.my_project_name}
compiler.S.extra_flags=-include "{custom.global.path}/ide_global.h" -include "{build.path}/sketch/global.h" {build.espurna_flags} {build.espurna_ha_flags} {build.my_project_flags} {build.my_project_name}
compiler.cpp.extra_flags=-include "{custom.global.path}/ide_global.h" -include "{build.path}/sketch/global.h" {build.espurna_flags} {build.espurna_ha_flags} {build.my_project_flags} {build.my_project_name}

# Copy a sketch/global.h template file into the build tree if it is missing.
# This file is a default. If you have one in your sketch's source directory,
# the Arduino IDE build process will replace the default.
recipe.hooks.prebuild.01.pattern="{custom.gnutool.path}/mkdir" -p "{build.path}/sketch"
recipe.hooks.prebuild.02.pattern="{custom.gnutool.path}/cp" -n --preserve=timestamps "{custom.global.path}/global.h" "{build.path}/sketch/global.h"

# This will get us a summary report of sizes on some interesting sections
# the results are shown in the IDE build window, when verbose setting is checked.
tools.elfsum.cmd=xtensa-lx106-elf-objdump
tools.elfsum.path={compiler.path}
tools.elfsum.flags=-h -w --section=.text --section=.irom0.text --section=.data --section=.bss --section=.rodata
tools.elfsum.extra_flags=
recipe.hooks.linking.postlink.1.pattern="{tools.elfsum.path}{tools.elfsum.cmd}" {tools.elfsum.flags} {tools.elfsum.extra_flags} "{build.path}/{build.project_name}.elf"

#
# This will give us a map file in the build directory
compiler.c.elf.extra_flags=-Wl,-Map,{build.path}/{build.project_name}.map
